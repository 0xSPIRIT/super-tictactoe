!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	c:/dev/printf_chelly/super_tictactoe/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
Game	tictactoe.cpp	/^struct Game {$/;"	s	file:
Grid	tictactoe.cpp	/^struct Grid {$/;"	s	file:
H	tictactoe.cpp	/^#define H /;"	d	file:
INNER_SIZE	tictactoe.cpp	/^#define INNER_SIZE /;"	d	file:
PLACEMENT_CLEAR	tictactoe.cpp	/^    PLACEMENT_CLEAR,$/;"	e	enum:Placement	file:
PLACEMENT_DRAW	tictactoe.cpp	/^    PLACEMENT_DRAW,$/;"	e	enum:Placement	file:
PLACEMENT_O	tictactoe.cpp	/^    PLACEMENT_O,$/;"	e	enum:Placement	file:
PLACEMENT_X	tictactoe.cpp	/^    PLACEMENT_X,$/;"	e	enum:Placement	file:
Placement	tictactoe.cpp	/^enum Placement {$/;"	g	file:
W	tictactoe.cpp	/^#define W /;"	d	file:
array	tictactoe.cpp	/^    Grid array[H][W];$/;"	m	struct:Game	typeref:typename:Grid[][]	file:
array	tictactoe.cpp	/^    Placement array[H][W];$/;"	m	struct:Grid	typeref:typename:Placement[][]	file:
check_win	tictactoe.cpp	/^Placement check_win(Grid *grid, int *sx, int *sy, int *ex, int *ey) {$/;"	f	typeref:typename:Placement
current_x	tictactoe.cpp	/^    int current_x, current_y;$/;"	m	struct:Game	typeref:typename:int	file:
current_y	tictactoe.cpp	/^    int current_x, current_y;$/;"	m	struct:Game	typeref:typename:int	file:
draw_grid	tictactoe.cpp	/^void draw_grid(Grid *grid, Color color, bool is_total_grid) {$/;"	f	typeref:typename:void
draw_placement	tictactoe.cpp	/^void draw_placement(Grid *grid, int x, int y, Placement p, uint8_t alpha) {$/;"	f	typeref:typename:void
enlarge_rec	tictactoe.cpp	/^void enlarge_rec(Rectangle &r, float amount) {$/;"	f	typeref:typename:void
global_current_placement	tictactoe.cpp	/^Placement global_current_placement = PLACEMENT_X;$/;"	v	typeref:typename:Placement
global_winner	tictactoe.cpp	/^Placement global_winner = PLACEMENT_CLEAR;$/;"	v	typeref:typename:Placement
main	tictactoe.cpp	/^int main(void) {$/;"	f	typeref:typename:int
pos	tictactoe.cpp	/^    Vector2   pos;$/;"	m	struct:Grid	typeref:typename:Vector2	file:
select_x	tictactoe.cpp	/^    int       select_x, select_y;$/;"	m	struct:Grid	typeref:typename:int	file:
select_y	tictactoe.cpp	/^    int       select_x, select_y;$/;"	m	struct:Grid	typeref:typename:int	file:
size	tictactoe.cpp	/^    float     size;$/;"	m	struct:Grid	typeref:typename:float	file:
total_grid	tictactoe.cpp	/^    Grid total_grid;$/;"	m	struct:Game	typeref:typename:Grid	file:
update_grid	tictactoe.cpp	/^bool update_grid(Grid *grid) {$/;"	f	typeref:typename:bool
win_grid	tictactoe.cpp	/^void win_grid(Grid *grid, Placement winner, int sx, int sy, int ex, int ey) {$/;"	f	typeref:typename:void
win_line_end	tictactoe.cpp	/^    Vector2   win_line_start, win_line_end;$/;"	m	struct:Grid	typeref:typename:Vector2	file:
win_line_start	tictactoe.cpp	/^    Vector2   win_line_start, win_line_end;$/;"	m	struct:Grid	typeref:typename:Vector2	file:
won	tictactoe.cpp	/^    Placement won;$/;"	m	struct:Grid	typeref:typename:Placement	file:
